/*!
 * Start Bootstrap - Agency v5.2.2 (https://startbootstrap.com/template-overviews/agency)
 * Copyright 2013-2019 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-agency/blob/master/LICENSE)
 */

document.addEventListener('DOMContentLoaded', function () {
    // Ziel-Elemente auswählen
    var navbarToggler = document.querySelector('.navbar-toggler');
    var navbar = document.querySelector('.navbar');
  
    // Funktion zum Handhaben von Änderungen des aria-expanded- und der navbar-shrink-Klasse definieren
    var handleAttributesChange = function () {
      var navbarShrink = navbar.classList.contains('navbar-shrink');
      var ariaExpanded = navbarToggler.getAttribute('aria-expanded');
  
      // Überprüfen, ob die navbar-shrink-Klasse nicht vorhanden ist und aria-expanded="true" ist
      if (!navbarShrink && ariaExpanded === 'true') {
        // Hintergrund gold setzen
        navbar.style.transition = 'background-color 0.3s ease';
        navbar.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
      } else if (!navbarShrink) {
        // Andernfalls den transparenten Hintergrund setzen
        navbar.style.transition = 'background-color 0.4s ease';
        navbar.style.backgroundColor = 'transparent';
      } else {
        navbar.style.transition = 'background-color 0.3s ease';
        navbar.style.backgroundColor = '#D4AF37';
      }
    };
  
    // Mutation Observer erstellen, um Änderungen des aria-expanded- und der navbar-shrink-Klasse zu überwachen
    var observer = new MutationObserver(handleAttributesChange);
  
    // Observer auf die Ziel-Elemente anwenden und auf Änderungen der Attribute überwachen
    observer.observe(navbarToggler, { attributes: true });
    observer.observe(navbar, { attributes: true, attributeFilter: ['class'] });
  });
  
  

document.addEventListener('DOMContentLoaded', function () {
    // Ziel-Element auswählen
    var navbarToggler = document.querySelector('.navbar-toggler');
  
    // Eine Funktion zum Handhaben von Änderungen des aria-expanded-Attributs definieren
    var handleAriaExpandedChange = function (mutationsList, observer) {
      for(var mutation of mutationsList) {
        // Überprüfen, ob sich das aria-expanded-Attribut geändert hat
        if (mutation.attributeName === 'aria-expanded') {
          var ariaExpanded = mutation.target.getAttribute('aria-expanded');
          // Wenn aria-expanded auf "false" gesetzt ist, entferne die Klasse "opened"
          if (ariaExpanded === 'false') {
            navbarToggler.classList.remove('opened');
          }
        }
      }
    };
  
    // Einen Mutation Observer erstellen, um Änderungen des aria-expanded-Attributs zu überwachen
    var observer = new MutationObserver(handleAriaExpandedChange);
  
    // Observer auf das Ziel-Element anwenden und auf Änderungen des aria-expanded-Attributs überwachen
    observer.observe(navbarToggler, { attributes: true });
  });

!function(e){"use strict";e('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var a=e(this.hash);if((a=a.length?a:e("[name="+this.hash.slice(1)+"]")).length)return e("html, body").animate({scrollTop:a.offset().top-54},1e3,"easeInOutExpo"),!1}}),e(".js-scroll-trigger").click(function(){e(".navbar-collapse").collapse("hide")}),e("body").scrollspy({target:"#mainNav",offset:56});function a(){100<e("#mainNav").offset().top?e("#mainNav").addClass("navbar-shrink"):e("#mainNav").removeClass("navbar-shrink")}a(),e(window).scroll(a)}(jQuery);


function erweiternText() {
    // Das span-Element mit der Klasse 'details-product-price-tax__value' auswählen
    var currentURL = window.location.href;
    // Überprüfen, ob das span-Element existiert und ob sein Text '25,54 €' ist
        if (currentURL.includes('/632984649/category=0')){
            if(document.querySelector('.details-product-price-tax__value')){
                var spanElement = document.querySelector('.details-product-price-tax__value');
                var currentText = spanElement.textContent;

        // Ihre Ergänzung zum vorhandenen Text hinzufügen
                var newText = currentText + ' und Pfand: 0,96€';

        // Den Text innerhalb des span-Elements aktualisieren
                spanElement.textContent = newText;
                scrollHandler();
            }else{
                setTimeout(erweiternText, 100);
                setTimeout(scrollHandler, 100);   
            }

        } else if(currentURL.includes('/633309296/category=0')) {
            console.log("seite erkannt");
            if(document.querySelector('.details-product-price-tax__value')){
               
            var spanElement = document.querySelector('.details-product-price-tax__value');
            var currentText = spanElement.textContent;
                console.log(currentText);
            // Ihre Ergänzung zum vorhandenen Text hinzufügen
            var newText = currentText + ' und Pfand: 0,80€';
            spanElement.textContent = newText;
            scrollHandler();
            }else{
                setTimeout(erweiternText, 100);    
                setTimeout(scrollHandler, 100);
            }
         } 
}
erweiternText();
// Event-Handler für das hashchange-Event hinzufügen, das ausgelöst wird, wenn sich der Anker in der URL ändert
window.addEventListener('hashchange', function() {
    // Wenn sich der Anker in der URL ändert, überprüfen und aktualisieren Sie den Text
    setTimeout(erweiternText, 150);
    
    setTimeout(erweiternText2, 150);

    setTimeout(groessentabelle, 150);
});



// Funktion, um den Text innerhalb des nested div-Elements zu erweitern
function erweiternText2() {
    // Aktuelle URL abrufen
    // Überprüfen, ob die URL den spezifischen Teil enthält
    
        // Überprüfen, ob das benötigte Element im DOM vorhanden ist
        if (document.querySelector('.grid-product--id-632984649 .grid-product__textblock.grid-product__included-taxes')) {
            // Das übergeordnete div-Element mit der Klasse 'grid-product--id-632984649' auswählen
            var parentDiv = document.querySelector('.grid-product--id-632984649');

            // Das nested div-Element innerhalb des übergeordneten div-Elements finden
            var nestedElement = parentDiv.querySelector('.grid-product__textblock.grid-product__included-taxes');

            // Überprüfen, ob das nested div-Element gefunden wurde
            if (nestedElement) {
                // Den Textinhalt des nested div-Elements aktualisieren
                nestedElement.innerHTML = 'Preis inkl. MwSt. und Pfand';
            }
        } else {
            // Wenn das Element nicht gefunden wurde, warten Sie weitere 200 Millisekunden und versuchen Sie es erneut
            setTimeout(erweiternText2, 200);
        }

        if (document.querySelector('.grid-product--id-633309296 .grid-product__textblock.grid-product__included-taxes')){
            var parentDiv = document.querySelector('.grid-product--id-633309296');

            // Das nested div-Element innerhalb des übergeordneten div-Elements finden
            var nestedElement = parentDiv.querySelector('.grid-product__textblock.grid-product__included-taxes');

            // Überprüfen, ob das nested div-Element gefunden wurde
            if (nestedElement) {
                // Den Textinhalt des nested div-Elements aktualisieren
                nestedElement.innerHTML = 'Preis inkl. MwSt. und Pfand';
            }
        }
}

// Funktion erweiternText2() aufrufen
erweiternText2();



function scrollHandler() {
    'use strict';

    document.querySelectorAll('a.js-scroll-trigger[href*="#"]:not([href="#"])').forEach(function(link) {
        link.addEventListener('click', function(event) {
            var target = document.querySelector(this.hash);
            if (target) {
                event.preventDefault();
                var offsetTop = target.getBoundingClientRect().top + window.pageYOffset;
                window.scrollTo({
                    top: offsetTop - 54,
                    behavior: 'smooth',
                    // Verwenden Sie die manuell implementierte Easing-Funktion
                    // Passen Sie die Dauer und das Timing nach Bedarf an
                    duration: 3000
                });
            }
        });
    });

    document.querySelectorAll('.js-scroll-trigger').forEach(function(trigger) {
        trigger.addEventListener('click', function() {
            document.querySelector('.navbar-collapse').classList.remove('show');
        });
    });

    document.body.addEventListener('scroll', function() {
        var mainNav = document.getElementById('mainNav');
        if (window.scrollY > mainNav.offsetTop) {
            mainNav.classList.add('navbar-shrink');
        } else {
            mainNav.classList.remove('navbar-shrink');
        }
    });

    // Initialize scrollspy
    var scrollSpyTarget = document.querySelector('#mainNav');
    document.body.addEventListener('scroll', function() {
        var scrollOffset = 56;
        if (window.scrollY > scrollSpyTarget.offsetTop) {
            scrollSpyTarget.classList.add('scrollspy-active');
        } else {
            scrollSpyTarget.classList.remove('scrollspy-active');
        }
    });
}


function groessentabelle() { 
    var currentURL = window.location.href;
    
    if (currentURL.includes('/632984450/category=0')){
        if (document.getElementById('openModal')) {
        const openModalBtn = document.getElementById('openModal');
        const modal = document.getElementById('modal');
        const closeBtn = document.getElementsByClassName('close')[0];

        openModalBtn.addEventListener('click', function() { 
        modal.style.display = 'block';
        });

    closeBtn.addEventListener('click', function() {
    modal.style.display = 'none';
    });

    window.addEventListener('click', function(event) {
    if (event.target === modal) {
     modal.style.display = 'none';
     }
    });
    } else {
    // Wenn das Element nicht gefunden wurde, warten Sie weitere 200 Millisekunden und versuchen Sie es erneut
    setTimeout(groessentabelle, 200);
    }
    }
}
setTimeout(groessentabelle, 200);

